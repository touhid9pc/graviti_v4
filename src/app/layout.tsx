import ClientRoot from "@/components/clientRoot/ClientRoot";
import type { Metadata } from "next";
import { Geist, Geist_Mono, Manrope } from "next/font/google";
import Script from "next/script";
import { Toaster } from "react-hot-toast";
import "./globals.css";
import { GoogleAnalytics } from "@next/third-parties/google";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});

const manrope = Manrope({
  subsets: ["latin"],
  variable: "--font-manrope",
});

export const metadata: Metadata = {
  title: "Graviti",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  const GA_ID = process.env.NEXT_PUBLIC_GA_ID!;
  return (
    <html lang="en">
      <head>
        {/* Google Analytics Script */}
        {/* <Script
          strategy="afterInteractive"
          src={`https://www.googletagmanager.com/gtag/js?id=${process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID}`}
        />
        <Script
          id="gtag-init"
          strategy="afterInteractive"
          dangerouslySetInnerHTML={{
            __html: `
              window.dataLayer = window.dataLayer || [];
              function gtag(){dataLayer.push(arguments);}
              gtag('js', new Date());
              gtag('config', ${process.env.NEXT_PUBLIC_FIREBASE_MEASUREMENT_ID}, {
                page_path: window.location.pathname,
              });
            `,
          }}
        /> */}
        <GoogleAnalytics gaId={GA_ID} />
      </head>
      <body className={`${manrope.variable} antialiased select-none`}>
        <ClientRoot />

        {/* <ClickTracker /> */}
        {/* <SmoothCursor /> */}
        <Toaster
          position="top-center"
          toastOptions={{
            duration: 4000,
            style: {
              padding: "1rem 1.5rem",
              borderRadius: "16px",
              fontSize: "clamp(0.875rem, 2.5vw, 1rem)",
              fontWeight: 500,
              color: "#fff",
              backdropFilter: "blur(6px)",
              WebkitBackdropFilter: "blur(6px)",
              boxShadow: "0 8px 30px rgba(0,0,0,0.2)",
            },
            success: {
              style: {
                background: "linear-gradient(135deg, #00C9A7, #007B55)",
              },
              iconTheme: {
                primary: "#ffffff",
                secondary: "#00C9A7",
              },
            },
            error: {
              style: {
                background: "linear-gradient(135deg, #FF6B6B, #C9184A)",
              },
              iconTheme: {
                primary: "#ffffff",
                secondary: "#FF6B6B",
              },
            },
          }}
        />
        {children}
      </body>
    </html>
  );
}
